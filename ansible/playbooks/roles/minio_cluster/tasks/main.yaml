---
- name: Print UUID
  debug:
    msg: "UUID vdb1: {{ ansible_devices.vdb.partitions.vdb1.uuid }}"

- name: Creates hosts
  template:
    src: hosts.j2
    dest: /etc/hosts

- name: Add the group 'minio'
  ansible.builtin.group:
    name: minio
    state: present

- name: Add the user 'minio'
  ansible.builtin.user:
    name: minio
    group: minio
    comment: minio
    shell: /sbin/nologin

- name: Creates directory minio mount
  ansible.builtin.file:
    path: /minio
    owner: minio
    group: minio
    state: directory

- name: Mount up device by UUID
  ansible.posix.mount:
    path: /minio
    src: UUID={{ ansible_devices.vdb.partitions.vdb1.uuid }}
    fstype: btrfs
    state: mounted

- name: Copy minio file
  ansible.builtin.copy:
    src: ../files/minio
    dest: /usr/local/bin/minio
    owner: minio
    group: minio
    mode: '0744'

- name: Creates minio directory config
  ansible.builtin.file:
    path: /etc/minio
    owner: minio
    group: minio
    state: directory

- name: Creates minio ENV file
  template:
    src: minio.env.j2
    dest: /etc/default/minio
    owner: minio
    group: minio
  when: "ansible_service_mgr == 'systemd'" 
  register: minio_env

- name: Creates minio systemd file
  template:
    src: minio.service.j2
    dest: /etc/systemd/system/minio.service

- name: Make sure a service minio is running and enabled
  ansible.builtin.systemd_service:
    daemon_reload: true
    state: started
    enabled: true
    name: minio

- name: Restart minio if ENV was changed
  ansible.builtin.systemd_service:
    state: restarted
    name: minio
  when: minio_env.changed
